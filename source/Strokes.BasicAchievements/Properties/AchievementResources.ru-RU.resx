<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
<data name="UpperBoundaryValueIntName" xml:space="preserve">
    <value>Жизнь на грани</value>
</data>
  <data name="UpperBoundaryValueIntDescription" xml:space="preserve">
    <value>Присвойте максимальное допустимое значение переменной целого типа (бойтесь переполнения!)</value>
</data>
  <data name="LowerBoundaryValueIntName" xml:space="preserve">
    <value>Жизнь на отрицательной грани</value>
</data>
  <data name="LowerBoundaryValueIntDescription" xml:space="preserve">
    <value>Присвойте минимальное допустимое значение переменной целого типа (бойтесь переполнения!)</value>
</data>
  <data name="MultipleDeclareCharName" xml:space="preserve">
    <value>Объявление нескольких символьных переменных в одном операторе</value>
</data>
  <data name="MultipleDeclareCharDescription" xml:space="preserve">
    <value>Объявите несколько символьных переменных за раз</value>
</data>
  <data name="OverrideGetHashCodeAchievementName" xml:space="preserve">
    <value>Предъявите ваши документы</value>
</data>
  <data name="OverrideGetHashCodeAchievementDescription" xml:space="preserve">
    <value>Переопределите метод System.Object.GetHashCode()</value>
</data>
  <data name="DoWhileLoopAchievementName" xml:space="preserve">
    <value>Цикл DoWhile</value>
</data>
  <data name="DoWhileLoopAchievementDescription" xml:space="preserve">
    <value>Используйте цикл do-while</value>
</data>
  <data name="InfiniteWhileLoopAchievementName" xml:space="preserve">
    <value>Бесконечный цикл while</value>
</data>
  <data name="InfiniteWhileLoopAchievementDescription" xml:space="preserve">
    <value>Создайте бесконечный цикл while</value>
</data>
  <data name="CreateMethodAchievementName" xml:space="preserve">
    <value>Спец по методам</value>
</data>
  <data name="CreateMethodAchievementDescription" xml:space="preserve">
    <value>Создайте метод</value>
</data>
  <data name="ConstKeywordAchievementName" xml:space="preserve">
    <value>Создание константы</value>
</data>
  <data name="ConstKeywordAchievementDescription" xml:space="preserve">
    <value>Используйте ключевое слово const</value>
</data>
  <data name="InstantiateObjectWithInitAchievementName" xml:space="preserve">
    <value>Создание объекта с помощью инициализатора</value>
</data>
  <data name="InstantiateObjectWithInitAchievementDescription" xml:space="preserve">
    <value>Создайте объект, используя синтаксис инициализаторов объектов</value>
</data>
  <data name="TryCatchFinallyStatementAchievementName" xml:space="preserve">
    <value>Блок Try-Catch-Finally</value>
</data>
  <data name="TryCatchFinallyStatementAchievementDescription" xml:space="preserve">
    <value>Используйте блок try-catch-finally</value>
</data>
  <data name="CreateAutoPropertyAchievementName" xml:space="preserve">
    <value>Prop [Tab][Tab]</value>
</data>
  <data name="CreateAutoPropertyAchievementDescription" xml:space="preserve">
    <value>Создайте автоматическое свойство</value>
</data>
  <data name="CreateMethodReturnVoidAchievementName" xml:space="preserve">
    <value>В пустоту</value>
</data>
  <data name="CreateMethodReturnVoidAchievementDescription" xml:space="preserve">
    <value>Создайте метод, возвращающий void</value>
</data>
  <data name="CreateMethodReturnIntAchievementName" xml:space="preserve">
    <value>Вернуть int</value>
</data>
  <data name="CreateMethodReturnIntAchievementDescription" xml:space="preserve">
    <value>Создайте метод, возвращающий int</value>
</data>
  <data name="CreateMethodReturnStringAchievementName" xml:space="preserve">
    <value>Вернуть string</value>
</data>
  <data name="CreateMethodReturnStringAchievementDescription" xml:space="preserve">
    <value>Создайте метод, возвращающий string</value>
</data>
  <data name="CreateMethodReturnBoolAchievementName" xml:space="preserve">
    <value>Вернуть bool</value>
</data>
  <data name="CreateMethodReturnBoolAchievementDescription" xml:space="preserve">
    <value>Создайте метод, возвращающий boolean</value>
</data>
  <data name="CreateMethodReturnCharAchievementName" xml:space="preserve">
    <value>Вернуть char</value>
</data>
  <data name="CreateMethodReturnCharAchievementDescription" xml:space="preserve">
    <value>Создайте метод, возвращающий char</value>
</data>
  <data name="CreateMethodReturnDoubleAchievementName" xml:space="preserve">
    <value>Вернуть double</value>
</data>
  <data name="CreateMethodReturnDoubleAchievementDescription" xml:space="preserve">
    <value>Создайте метод, возвращающий double</value>
</data>
  <data name="CreateMethodReturnFloatAchievementName" xml:space="preserve">
    <value>Вернуть float</value>
</data>
  <data name="CreateMethodReturnFloatAchievementDescription" xml:space="preserve">
    <value>Создайте метод, возвращающий float</value>
</data>
  <data name="JaggedArrayAchievementName" xml:space="preserve">
    <value>Пила</value>
</data>
  <data name="JaggedArrayAchievementDescription" xml:space="preserve">
    <value>Объявите вложенный многомерный массив ([][] вместо [,])</value>
</data>
  <data name="DeclareIntName" xml:space="preserve">
    <value>Объявление переменной типа int</value>
</data>
  <data name="DeclareIntDescription" xml:space="preserve">
    <value>Одним оператором объявите, но не инициализируйте переменную типа int</value>
</data>
  <data name="DeclareInitializeIntName" xml:space="preserve">
    <value>Объявление и инициализация переменной типа int</value>
</data>
  <data name="DeclareInitializeIntDescription" xml:space="preserve">
    <value>Одним оператором объявите и проинициализируйте переменную типа int</value>
</data>
  <data name="MultipleDeclareFloatName" xml:space="preserve">
    <value>Объявление нескольких переменных типа float в одном операторе</value>
</data>
  <data name="MultipleDeclareFloatDescription" xml:space="preserve">
    <value>Объявите несколько переменных типа float за раз</value>
</data>
  <data name="DeclareInitializeFloatName" xml:space="preserve">
    <value>Объявление и инициализация переменной типа float</value>
</data>
  <data name="DeclareInitializeFloatDescription" xml:space="preserve">
    <value>Объявите и проинициализируйте float одним оператором</value>
</data>
  <data name="MultipleDeclareDoubleName" xml:space="preserve">
    <value>Объявление нескольких переменных типа double в одном операторе</value>
</data>
  <data name="MultipleDeclareDoubleDescription" xml:space="preserve">
    <value>Объявите несколько переменных типа double за раз</value>
</data>
  <data name="PrintToConsoleAchievementName" xml:space="preserve">
    <value>Призрак в доспехах</value>
</data>
  <data name="PrintToConsoleAchievementDescription" xml:space="preserve">
    <value>Выведите что-нибудь на консоль</value>
</data>
  <data name="ForEachWithEnumAchievementName" xml:space="preserve">
    <value>Перебор перечисления</value>
</data>
  <data name="ForEachWithEnumAchievementDescription" xml:space="preserve">
    <value>Используйте цикл foreach чтобы пройтись по всем элементам перечисления</value>
</data>
  <data name="PrintNewLineAchievementName" xml:space="preserve">
    <value>Вывод новой строки с помощью символа \n</value>
</data>
  <data name="PrintNewLineAchievementDescription" xml:space="preserve">
    <value>Выведите новую строку на консоль с помощью символa \n</value>
</data>
  <data name="PrintHorizontalTabAchievementName" xml:space="preserve">
    <value>Вывод табуляции с помощью символа \t</value>
</data>
  <data name="PrintHorizontalTabAchievementDescription" xml:space="preserve">
    <value>Выведите горизонтальную табуляцию на консоль с помощью символа \t</value>
</data>
  <data name="PrintQuoteCharAchievementName" xml:space="preserve">
    <value>Вывод символа " используя escape-последовательность \"</value>
</data>
  <data name="PrintQuoteCharAchievementDescription" xml:space="preserve">
    <value>Выведите двойную кавычку (") на консоль используя escape-последовательность \"</value>
</data>
  <data name="PrintSingleQuoteCharAchievementName" xml:space="preserve">
    <value>Вывод символа ' используя escape-последовательность \'</value>
</data>
  <data name="PrintSingleQuoteCharAchievementDescription" xml:space="preserve">
    <value>Выведите кавычку (') на консоль используя escape-последовательность \'</value>
</data>
  <data name="PrintBackSlashCharAchievementName" xml:space="preserve">
    <value>Вывод символа \ используя escape-последовательность \\</value>
</data>
  <data name="PrintBackSlashCharAchievementDescription" xml:space="preserve">
    <value>Выведите обратный слеш (\) на консоль используя escape-последовательность \\</value>
</data>
  <data name="BeastNumberAchievementName" xml:space="preserve">
    <value>Число зверя...</value>
</data>
  <data name="BeastNumberAchievementDescription" xml:space="preserve">
    <value>Назначьте целой переменной значение 666</value>
</data>
  <data name="TryCatchIgnoreStatementAchievementName" xml:space="preserve">
    <value>Try-Catch-Заигнорь</value>
</data>
  <data name="TryCatchIgnoreStatementAchievementDescription" xml:space="preserve">
    <value>Напишите пустой блок catch</value>
</data>
  <data name="CalculatorChallengeName" xml:space="preserve">
    <value>Калькулятор</value>
</data>
  <data name="CalculatorChallengeDescription" xml:space="preserve">
    <value>Реализуйте интерфейс ICalculator</value>
</data>
  <data name="TypeOfAchievementName" xml:space="preserve">
    <value>Typeof</value>
</data>
  <data name="TypeOfAchievementDescription" xml:space="preserve">
    <value>Используйте оператор typeof</value>
</data>
  <data name="AssignIntName" xml:space="preserve">
    <value>Присвоение целого</value>
</data>
  <data name="AssignIntDescription" xml:space="preserve">
    <value>Присвойте значение существующей целой переменной</value>
</data>
  <data name="IfShorthandAchievementName" xml:space="preserve">
    <value>?:</value>
</data>
  <data name="IfShorthandAchievementDescription" xml:space="preserve">
    <value>Напишите условное выражение</value>
</data>
  <data name="NestedIfStatementAchievementName" xml:space="preserve">
    <value>If-в-if</value>
</data>
  <data name="NestedIfStatementAchievementDescription" xml:space="preserve">
    <value>Напишите оператор if внутри другого if</value>
</data>
  <data name="AssignCharName" xml:space="preserve">
    <value>Присвоение символа</value>
</data>
  <data name="AssignCharDescription" xml:space="preserve">
    <value>Присвойте значение существующей символьной переменной</value>
</data>
  <data name="ParamsParameterAchievementName" xml:space="preserve">
    <value>Ключевое слово params</value>
</data>
  <data name="ParamsParameterAchievementDescription" xml:space="preserve">
    <value>Напишите метод, использующий в своих аргументах ключевое слово params</value>
</data>
  <data name="ConvertToCharAchievementName" xml:space="preserve">
    <value>Преобразование к Char</value>
</data>
  <data name="ConvertToCharAchievementDescription" xml:space="preserve">
    <value>Используйте метод Convert.ToChar</value>
</data>
  <data name="ConvertToDecimalAchievementName" xml:space="preserve">
    <value>Преобразование к Decimal</value>
</data>
  <data name="ConvertToDecimalAchievementDescription" xml:space="preserve">
    <value>Используйте метод Convert.ToDecimal</value>
</data>
  <data name="ConvertToDoubleAchievementName" xml:space="preserve">
    <value>Преобразование к double</value>
</data>
  <data name="ConvertToDoubleAchievementDescription" xml:space="preserve">
    <value>Используйте метод Convert.ToDouble method</value>
</data>
  <data name="ConvertToInt32AchievementName" xml:space="preserve">
    <value>Преобразование к Int32</value>
</data>
  <data name="ConvertToInt32AchievementDescription" xml:space="preserve">
    <value>Используйте метод Convert.ToInt32 method</value>
</data>
  <data name="TooManyDimensionArrayDeclarationAchievementName" xml:space="preserve">
    <value>Доказываешь теорию струн?</value>
</data>
  <data name="TooManyDimensionArrayDeclarationAchievementDescription" xml:space="preserve">
    <value>Объявите массив с более чем 11 измерениями</value>
</data>
  <data name="CreateClassAchievementName" xml:space="preserve">
    <value>Классно!</value>
</data>
  <data name="CreateClassAchievementDescription" xml:space="preserve">
    <value>Создайте класс</value>
</data>
  <data name="CreateOverloadedConstructorAchievementName" xml:space="preserve">
    <value>Боб, перегруженный конструктор</value>
</data>
  <data name="CreateOverloadedConstructorAchievementDescription" xml:space="preserve">
    <value>Напишите перегруженный конструктор класса</value>
</data>
  <data name="DeclareDoubleName" xml:space="preserve">
    <value>Объявление переменной типа double</value>
</data>
  <data name="DeclareDoubleDescription" xml:space="preserve">
    <value>Одним оператором объявите, но не инициализируйте переменную типа double</value>
</data>
  <data name="OperatorOrAchievementName" xml:space="preserve">
    <value>Использование оператора ИЛИ (||) </value>
</data>
  <data name="OperatorOrAchievementDescription" xml:space="preserve">
    <value>Используйте оператор ИЛИ</value>
</data>
  <data name="CreatePropertyAchievementName" xml:space="preserve">
    <value>Создание свойства</value>
</data>
  <data name="CreatePropertyAchievementDescription" xml:space="preserve">
    <value>Создайте свойство любого типа</value>
</data>
  <data name="FormatSpecifierAchievementName" xml:space="preserve">
    <value>Строка-спецификатор формата</value>
</data>
  <data name="FormatSpecifierAchievementDescription" xml:space="preserve">
    <value>Выведите что-либо на консоль с использованием спецификатора формата</value>
</data>
  <data name="CreateThisConstructorInitAchievementName" xml:space="preserve">
    <value>Це конструктор</value>
</data>
  <data name="CreateThisConstructorInitAchievementDescription" xml:space="preserve">
    <value>Вызовите из конструктора другой конструктор с помощью ключевого слова this</value>
</data>
  <data name="DeclareInitArrayAchievementName" xml:space="preserve">
    <value>Объявление и инициализация массива с помощью списка инициализации</value>
</data>
  <data name="DeclareInitArrayAchievementDescription" xml:space="preserve">
    <value>Объявите и инициализируйте массив с помощью списка инициализации</value>
</data>
  <data name="InlineCommentAchievementName" xml:space="preserve">
    <value>Встроенный комментарий</value>
</data>
  <data name="InlineCommentAchievementDescription" xml:space="preserve">
    <value>Напишите однострочный комментарий</value>
</data>
  <data name="DeclareFloatName" xml:space="preserve">
    <value>Объявление переменной типа float</value>
</data>
  <data name="DeclareFloatDescription" xml:space="preserve">
    <value>В одном операторе объявите, но не инициализируйте переменную типа float</value>
</data>
  <data name="DeclareHexShorthandCharAchievementName" xml:space="preserve">
    <value>Я думаю в хексе</value>
</data>
  <data name="DeclareHexShorthandCharAchievementDescription" xml:space="preserve">
    <value>Используйте шестнадцатеричную запись для создания символьной переменной</value>
</data>
  <data name="DestructorAchievementName" xml:space="preserve">
    <value>Мое имя - Деструктор!</value>
</data>
  <data name="DestructorAchievementDescription" xml:space="preserve">
    <value>Определите в своем классе деструктор</value>
</data>
  <data name="OverrideToStringAchievementName" xml:space="preserve">
    <value>ToString()</value>
</data>
  <data name="OverrideToStringAchievementDescription" xml:space="preserve">
    <value>Переопределите метод System.Object.ToString()</value>
</data>
  <data name="WhileLoopAchievementName" xml:space="preserve">
    <value>Цикл While</value>
</data>
  <data name="WhileLoopAchievementDescription" xml:space="preserve">
    <value>Используйте цикл while</value>
</data>
  <data name="AssignDoubleName" xml:space="preserve">
    <value>Присвоение значения типа double</value>
</data>
  <data name="AssignDoubleDescription" xml:space="preserve">
    <value>Присвойте значение существующей переменной типа double</value>
</data>
  <data name="DefaultCaseInSwitchSwitchAchievementName" xml:space="preserve">
    <value>Определение в операторе switch раздела по-умолчанию</value>
</data>
  <data name="DefaultCaseInSwitchSwitchAchievementDescription" xml:space="preserve">
    <value>Определите раздел по-умолчанию в операторе switch</value>
</data>
  <data name="DeclareEscapeCharAchievementName" xml:space="preserve">
    <value>Символ escape-последовательность</value>
</data>
  <data name="DeclareEscapeCharAchievementDescription" xml:space="preserve">
    <value>Объявите символ, содержащий escape-последовательность</value>
</data>
  <data name="OutParameterAchievementName" xml:space="preserve">
    <value>Ключевое слово out</value>
</data>
  <data name="OutParameterAchievementDescription" xml:space="preserve">
    <value>Напишите метод, использующий в своих аргументах ключевое слово out</value>
</data>
  <data name="ExtensionMethodAchievementName" xml:space="preserve">
    <value>Расширено!</value>
</data>
  <data name="ExtensionMethodAchievementDescription" xml:space="preserve">
    <value>Создайте метод-расширение</value>
</data>
  <data name="CreateDefaultConstructorAchievementName" xml:space="preserve">
    <value>Явное умолчание</value>
</data>
  <data name="CreateDefaultConstructorAchievementDescription" xml:space="preserve">
    <value>Напишите конструктор класса по-умолчанию</value>
</data>
  <data name="AssignFloatName" xml:space="preserve">
    <value>Присвоение значения типа float</value>
</data>
  <data name="AssignFloatDescription" xml:space="preserve">
    <value>Присвойте значение в существующую переменную типа float</value>
</data>
  <data name="OperatorAndAchievementName" xml:space="preserve">
    <value>Использование оператора И (&amp;&amp;)</value>
</data>
  <data name="OperatorAndAchievementDescription" xml:space="preserve">
    <value>Используйте оператор И</value>
</data>
  <data name="GotoAchievementName" xml:space="preserve">
    <value>Спагетти Болоньезе</value>
</data>
  <data name="GotoAchievementDescription" xml:space="preserve">
    <value>Пожалуйста, больше не используйте goto. Вы же заработали достижение, теперь довольны?</value>
</data>
  <data name="NotOperatorAchievementName" xml:space="preserve">
    <value>Инверсия!</value>
</data>
  <data name="NotOperatorAchievementDescription" xml:space="preserve">
    <value>Используйте оператор НЕ (!) для инверсирования значения выражения</value>
</data>
  <data name="StringCompareAchievementName" xml:space="preserve">
    <value>Посравниваем строчки</value>
</data>
  <data name="StringCompareAchievementDescription" xml:space="preserve">
    <value>Используйте метод String.Compare</value>
</data>
  <data name="StringConcatAchievementName" xml:space="preserve">
    <value>Строковая конка-чего?</value>
</data>
  <data name="StringConcatAchievementDescription" xml:space="preserve">
    <value>Используйте метод String.Concat</value>
</data>
  <data name="StringCopyAchievementName" xml:space="preserve">
    <value>Копирование строк</value>
</data>
  <data name="StringCopyAchievementDescription" xml:space="preserve">
    <value>Используйте метод String.Copy</value>
</data>
  <data name="StringEqualsAchievementName" xml:space="preserve">
    <value>Равенство строк</value>
</data>
  <data name="StringEqualsAchievementDescription" xml:space="preserve">
    <value>Используйте метод String.Equals</value>
</data>
  <data name="StringJoinAchievementName" xml:space="preserve">
    <value>Объединение строк</value>
</data>
  <data name="StringJoinAchievementDescription" xml:space="preserve">
    <value>Используйте метод String.Join</value>
</data>
  <data name="OverloadOperatorAchievementName" xml:space="preserve">
    <value>Оператор перегружен!</value>
</data>
  <data name="OverloadOperatorAchievementDescription" xml:space="preserve">
    <value>Перегрузите оператора</value>
</data>
  <data name="PlusPlusOperatorAchievementName" xml:space="preserve">
    <value>Использование оператора ++</value>
</data>
  <data name="PlusPlusOperatorAchievementDescription" xml:space="preserve">
    <value>Напишите выражение, использующее оператор ++</value>
</data>
  <data name="MinusMinusOperatorAchievementName" xml:space="preserve">
    <value>Использование оператора --</value>
</data>
  <data name="MinusMinusOperatorAchievementDescription" xml:space="preserve">
    <value>Напишите выражение, использующее оператор --</value>
</data>
  <data name="EnumInitializerExplicitAchievementName" xml:space="preserve">
    <value>Я научу тебя считать</value>
</data>
  <data name="EnumInitializerExplicitAchievementDescription" xml:space="preserve">
    <value>Создайте перечисление с явно указанными значениями</value>
</data>
  <data name="PlusOperatorAchievementName" xml:space="preserve">
    <value>Использование оператора +</value>
</data>
  <data name="PlusOperatorAchievementDescription" xml:space="preserve">
    <value>Напишите выражение, использующее оператор +</value>
</data>
  <data name="MinusOperatorAchievementName" xml:space="preserve">
    <value>Использование оператора -</value>
</data>
  <data name="MinusOperatorAchievementDescription" xml:space="preserve">
    <value>Напишите выражение, использующее оператор -</value>
</data>
  <data name="MultiplyOperatorAchievementName" xml:space="preserve">
    <value>Использование оператора *</value>
</data>
  <data name="MultiplyOperatorAchievementDescription" xml:space="preserve">
    <value>Напишите выражение, использующее оператор *</value>
</data>
  <data name="DivideOperatorAchievementName" xml:space="preserve">
    <value>Использование оператора /</value>
</data>
  <data name="DivideOperatorAchievementDescription" xml:space="preserve">
    <value>Напишите выражение, использующее оператор /</value>
</data>
  <data name="ModuloOperatorAchievementName" xml:space="preserve">
    <value>Использование оператора %</value>
</data>
  <data name="ModuloOperatorAchievementDescription" xml:space="preserve">
    <value>Напишите выражение, использующее оператор %</value>
</data>
  <data name="DeclareArrayAchievementName" xml:space="preserve">
    <value>Объявление массива</value>
</data>
  <data name="DeclareArrayAchievementDescription" xml:space="preserve">
    <value>Объявите массив</value>
</data>
  <data name="CreateStaticMethodAchievementName" xml:space="preserve">
    <value>Создание статического метода</value>
</data>
  <data name="CreateStaticMethodAchievementDescription" xml:space="preserve">
    <value>Создайте статический метод</value>
</data>
  <data name="CatchManyExceptionsAchievementName" xml:space="preserve">
    <value>Сэр-поймай-всё</value>
</data>
  <data name="CatchManyExceptionsAchievementDescription" xml:space="preserve">
    <value>Явно поймайте 5 или более исключений</value>
</data>
  <data name="CreateConstructorAchievementName" xml:space="preserve">
    <value>Боб, конструктор</value>
</data>
  <data name="CreateConstructorAchievementDescription" xml:space="preserve">
    <value>Напишите конструктор класса</value>
</data>
  <data name="CreateInterfaceAchievementName" xml:space="preserve">
    <value>Интерфейс</value>
</data>
  <data name="CreateInterfaceAchievementDescription" xml:space="preserve">
    <value>Создайте интерфейс</value>
</data>
  <data name="UseAsKeywordAchievementName" xml:space="preserve">
    <value>As</value>
</data>
  <data name="UseAsKeywordAchievementDescription" xml:space="preserve">
    <value>Напишите явное преобразование типа с использованием ключевого слова AS</value>
</data>
  <data name="ProgramWithStartupParamsAchievementName" xml:space="preserve">
    <value>Параметры запуска</value>
</data>
  <data name="ProgramWithStartupParamsAchievementDescription" xml:space="preserve">
    <value>Напишите программу, принимающую и использующую параметры запуска</value>
</data>
  <data name="PrivateSetterAchievementName" xml:space="preserve">
    <value>Приватный сеттер</value>
</data>
  <data name="PrivateSetterAchievementDescription" xml:space="preserve">
    <value>Создайте свойство с приватным сеттером</value>
</data>
  <data name="EnumInitializerAchievementName" xml:space="preserve">
    <value>Создание перечисления</value>
</data>
  <data name="EnumInitializerAchievementDescription" xml:space="preserve">
    <value>Создайте тип-перечисление</value>
</data>
  <data name="IfElseStatementAchievementName" xml:space="preserve">
    <value>И что тогда?!</value>
</data>
  <data name="IfElseStatementAchievementDescription" xml:space="preserve">
    <value>Используйте оператор if/else</value>
</data>
  <data name="EnumSwitchAchievementName" xml:space="preserve">
    <value>Enumswitch</value>
</data>
  <data name="EnumSwitchAchievementDescription" xml:space="preserve">
    <value>Используйте оператор switch по всем значениям какого-либо перечисления</value>
</data>
  <data name="UpperBoundaryValueFDoubleName" xml:space="preserve">
    <value>Жизнь на двойной грани</value>
</data>
  <data name="UpperBoundaryValueFDoubleDescription" xml:space="preserve">
    <value>Присвойте максимальное допустимое значение переменной типа double (бойтесь переполнения!)</value>
</data>
  <data name="LowerBoundaryValuedoubleName" xml:space="preserve">
    <value>Жизнь на отрицательной двойной грани</value>
</data>
  <data name="LowerBoundaryValuedoubleDescription" xml:space="preserve">
    <value>Присвойте минимальное допустимое значение переменной типа double (бойтесь переполнения!)</value>
</data>
  <data name="DeclareCharName" xml:space="preserve">
    <value>Объявите переменную типа char</value>
</data>
  <data name="DeclareCharDescription" xml:space="preserve">
    <value>Одним оператором объявите, но не инициализируйте переменную типа char</value>
</data>
  <data name="JobSecurityAchievementName" xml:space="preserve">
    <value>Гарантия занятости</value>
</data>
  <data name="JobSecurityAchievementDescription" xml:space="preserve">
    <value>Напишите LINQ-запрос, длиной более 10 строк</value>
</data>
  <data name="TellingAStoryAchievementName" xml:space="preserve">
    <value>Расскажи мне историю</value>
</data>
  <data name="TellingAStoryAchievementDescription" xml:space="preserve">
    <value>Создайте метод длиной более 100 строк</value>
</data>
  <data name="EpicTaleAchievementName" xml:space="preserve">
    <value>Эпичная история</value>
</data>
  <data name="EpicTaleAchievementDescription" xml:space="preserve">
    <value>Создайте метод длиной более 300 строк</value>
</data>
  <data name="ParametizerAchievementName" xml:space="preserve">
    <value>Параметризатор</value>
</data>
  <data name="ParametizerAchievementDescription" xml:space="preserve">
    <value>Создайте метод с более чем десятью обязательными параметрами</value>
</data>
  <data name="GUTAchievementName" xml:space="preserve">
    <value>Теория великого объединения</value>
</data>
  <data name="GUTAchievementDescription" xml:space="preserve">
    <value>Спроектируйте класс, реализующий как минимум 5 интерфейсов</value>
</data>
  <data name="EveryOptionEnumAchievementName" xml:space="preserve">
    <value>Подумал о каждой мелочи</value>
</data>
  <data name="EveryOptionEnumAchievementDescription" xml:space="preserve">
    <value>Создайте перечисление с более чем 10 значениями</value>
</data>
  <data name="ProceduralProgrammerAchievementName" xml:space="preserve">
    <value>Процедурный программист</value>
</data>
  <data name="ProceduralProgrammerAchievementDescription" xml:space="preserve">
    <value>Создайте метод с более чем 10 out-параметрами</value>
</data>
  <data name="TooManyModifiersMethodDeclarationAchievementName" xml:space="preserve">
    <value>Любитель модификаторов</value>
</data>
  <data name="TooManyModifiersMethodDeclarationAchievementDescription" xml:space="preserve">
    <value>Объявите метод с большим количеством модификаторов</value>
</data>
  <data name="InstantiateObjectAchievementName" xml:space="preserve">
    <value>Воплотись!</value>
</data>
  <data name="InstantiateObjectAchievementDescription" xml:space="preserve">
    <value>Создайте объект</value>
</data>
  <data name="IComparableAchievementName" xml:space="preserve">
    <value>IComparable</value>
</data>
  <data name="IComparableAchievementDescription" xml:space="preserve">
    <value>Напишите класс, реализующий интерфейс IComparable</value>
</data>
  <data name="IfStatementAchievementName" xml:space="preserve">
    <value>А что если...</value>
</data>
  <data name="IfStatementAchievementDescription" xml:space="preserve">
    <value>Используйте оператор if</value>
</data>
  <data name="HelloWorldAchievementName" xml:space="preserve">
    <value>Hello world</value>
</data>
  <data name="HelloWorldAchievementDescription" xml:space="preserve">
    <value>Напишите саму часто создаваемую программу</value>
</data>
  <data name="TryCatchRethrowStatementAchievementName" xml:space="preserve">
    <value>Операция:Открывание зонтика</value>
</data>
  <data name="TryCatchRethrowStatementAchievementDescription" xml:space="preserve">
    <value>Напишите оператор catch которй просто пробрасывает исключение</value>
</data>
  <data name="ArrayLengthPropertyAchievementName" xml:space="preserve">
    <value>Длина массива</value>
</data>
  <data name="ArrayLengthPropertyAchievementDescription" xml:space="preserve">
    <value>Используйте свойство Length у массива</value>
</data>
  <data name="LambdaExpressionAchievementName" xml:space="preserve">
    <value>Lambda-выражение</value>
</data>
  <data name="LambdaExpressionAchievementDescription" xml:space="preserve">
    <value>Используйте lambda-выражение</value>
</data>
  <data name="DeclareInitializeCharName" xml:space="preserve">
    <value>Объявление и инициализация переменной типа char</value>
</data>
  <data name="DeclareInitializeCharDescription" xml:space="preserve">
    <value>Одним оператором объявите и проинициализируйте переменную типа char </value>
</data>
  <data name="UpperBoundaryValueCharName" xml:space="preserve">
    <value>Жизнь на символической грани</value>
</data>
  <data name="UpperBoundaryValueCharDescription" xml:space="preserve">
    <value>Присвойте максимальное допустимое значение переменной типа char (бойтесь переполнения!)</value>
</data>
  <data name="LowerBoundaryValueCharName" xml:space="preserve">
    <value>Жизнь на отрицательной символической грани</value>
</data>
  <data name="LowerBoundaryValueCharDescription" xml:space="preserve">
    <value>Присвойте минимальное допустимое значение переменной типа char (бойтесь переполнения!)</value>
</data>
  <data name="CreateMethodMultipleParametersAchievementName" xml:space="preserve">
    <value>Method Man и Wu-Tang Clan</value>
</data>
  <data name="CreateMethodMultipleParametersAchievementDescription" xml:space="preserve">
    <value>Создайте метод с двумя или более параметрами</value>
</data>
  <data name="CreateMethodOneParameterAchievementName" xml:space="preserve">
    <value>Method man с другом</value>
</data>
  <data name="CreateMethodOneParameterAchievementDescription" xml:space="preserve">
    <value>Создайте метод с одним параметром</value>
</data>
  <data name="BlockCommentAchievementName" xml:space="preserve">
    <value>Блочный комментарий</value>
</data>
  <data name="BlockCommentAchievementDescription" xml:space="preserve">
    <value>Напишите блочный комментарий</value>
</data>
  <data name="OverrideEqualsAchievementName" xml:space="preserve">
    <value>Что такое равенство</value>
</data>
  <data name="OverrideEqualsAchievementDescription" xml:space="preserve">
    <value>Переопределите метод System.Object.Equals</value>
</data>
  <data name="CaesarChallengeName" xml:space="preserve">
    <value>Цезарь</value>
</data>
  <data name="CaesarChallengeDescription" xml:space="preserve">
    <value>Напишите модуль, реализующий шифр Цезаря</value>
</data>
  <data name="TryFinallyStatementAchievementName" xml:space="preserve">
    <value>Ключевые слова Try-Finally</value>
</data>
  <data name="TryFinallyStatementAchievementDescription" xml:space="preserve">
    <value>Используйте ключевые слова try-finally без ключевого слова catch.</value>
</data>
  <data name="ForAchievementName" xml:space="preserve">
    <value>Цикл for</value>
</data>
  <data name="ForAchievementDescription" xml:space="preserve">
    <value>Используйте цикл for</value>
</data>
  <data name="UseConsoleReadlineAchievementName" xml:space="preserve">
    <value>Использование Console.ReadLine()</value>
</data>
  <data name="UseConsoleReadlineAchievementDescription" xml:space="preserve">
    <value>Получите ввод от пользователя</value>
</data>
  <data name="IfCompoundExpressionAchievementName" xml:space="preserve">
    <value>Используйте составное выражение в операторе if</value>
</data>
  <data name="IfCompoundExpressionAchievementDescription" xml:space="preserve">
    <value>Используйте несколько выражений в одном операторе if (используйте операторы &amp;&amp;, ||, и т.д.)</value>
</data>
  <data name="UpperBoundaryValueFloatName" xml:space="preserve">
    <value>Жизнь на плавающей грани</value>
</data>
  <data name="UpperBoundaryValueFloatDescription" xml:space="preserve">
    <value>Присвойте максимальное допустимое значение переменной типа float (бойтесь переполнения!)</value>
</data>
  <data name="LowerBoundaryValueFloatName" xml:space="preserve">
    <value>Жизнь на отрицательной плавающей грани</value>
</data>
  <data name="LowerBoundaryValueFloatDescription" xml:space="preserve">
    <value>Присвойте минимальное допустимое значение переменной типа float (бойтесь переполнения!)</value>
</data>
  <data name="UseIsKeywordAchievementName" xml:space="preserve">
    <value>Есть</value>
</data>
  <data name="UseIsKeywordAchievementDescription" xml:space="preserve">
    <value>Создайте выражение с использованием ключевого слова IS</value>
</data>
  <data name="AbstractClassAchievementName" xml:space="preserve">
    <value>Абстрактный класс</value>
</data>
  <data name="AbstractClassAchievementDescription" xml:space="preserve">
    <value>Создайте абстрактный класс</value>
</data>
  <data name="AbstractMethodAchievementName" xml:space="preserve">
    <value>Абстрактный метод</value>
</data>
  <data name="AbstractMethodAchievementDescription" xml:space="preserve">
    <value>Создайте абстрактный метод</value>
</data>
  <data name="UsingStatementAchievementName" xml:space="preserve">
    <value>Оператор using</value>
</data>
  <data name="UsingStatementAchievementDescription" xml:space="preserve">
    <value>Используйте оператор using</value>
</data>
  <data name="MultipleDeclareIntName" xml:space="preserve">
    <value>Объявите несколько целых переменных в одном операторе</value>
</data>
  <data name="MultipleDeclareIntDescription" xml:space="preserve">
    <value>Объявите несколько целых переменных за раз</value>
</data>
  <data name="RefParameterAchievementName" xml:space="preserve">
    <value>Параметр ref</value>
</data>
  <data name="RefParameterAchievementDescription" xml:space="preserve">
    <value>Напишите метод, использующий в одном из своих аргументов ключевое слово ref</value>
</data>
  <data name="ArrayClearMethodAchievementName" xml:space="preserve">
    <value>Очистка авгиевых массивов</value>
</data>
  <data name="ArrayClearMethodAchievementDescription" xml:space="preserve">
    <value>Используйте метод Array.Clear чтобы очистить массив</value>
</data>
  <data name="ArrayIndexOfMethodAchievementName" xml:space="preserve">
    <value>Поиск индекса</value>
</data>
  <data name="ArrayIndexOfMethodAchievementDescription" xml:space="preserve">
    <value>Используйте метод массива Array.IndexOf</value>
</data>
  <data name="ArrayReverseMethodAchievementName" xml:space="preserve">
    <value>Переворот массива</value>
</data>
  <data name="ArrayReverseMethodAchievementDescription" xml:space="preserve">
    <value>Используйте метод Array.Reverse чтобы перевернуть содержимое массива</value>
</data>
  <data name="ArraySortMethodAchievementName" xml:space="preserve">
    <value>Сортировка массива</value>
</data>
  <data name="ArraySortMethodAchievementDescription" xml:space="preserve">
    <value>Используйте метод Array.Sort чтобы отсортировать массив</value>
</data>
  <data name="PrintWithPlaceholdersFieldSizeAchievementName" xml:space="preserve">
    <value>При выводе текста на экран используйте заполнители и указание размера выводимого поля</value>
</data>
  <data name="PrintWithPlaceholdersFieldSizeAchievementDescription" xml:space="preserve">
    <value>Выведите что-нибудь на консоль с использованием заполнителей и явных указаний размеров полей</value>
</data>
  <data name="VirtualMethodAchievementName" xml:space="preserve">
    <value>Виртуальная реальность</value>
</data>
  <data name="VirtualMethodAchievementDescription" xml:space="preserve">
    <value>Создайте виртуальный метод</value>
</data>
  <data name="OVerrideMethodAchievementName" xml:space="preserve">
    <value>Перекрыть!</value>
</data>
  <data name="OVerrideMethodAchievementDescription" xml:space="preserve">
    <value>Переопределите метод</value>
</data>
  <data name="QueryExpressionAchievementName" xml:space="preserve">
    <value>Запросное выражение</value>
</data>
  <data name="QueryExpressionAchievementDescription" xml:space="preserve">
    <value>Используйте запросное выражение</value>
</data>
  <data name="ForEachAchievementName" xml:space="preserve">
    <value>Цикл foreach</value>
</data>
  <data name="ForEachAchievementDescription" xml:space="preserve">
    <value>Используйте цикл foreach</value>
</data>
  <data name="DeclareInitializeDoubleName" xml:space="preserve">
    <value>Объявление и инициализация переменной типа double</value>
</data>
  <data name="DeclareInitializeDoubleDescription" xml:space="preserve">
    <value>В одном операторе объявите и проинициализируйте переменную типа double</value>
</data>
  <data name="PrintWithPlaceholdersAchievementName" xml:space="preserve">
    <value>Печать с заполнителями</value>
</data>
  <data name="PrintWithPlaceholdersAchievementDescription" xml:space="preserve">
    <value>Выведите что-нибудь на консоль, используя заполнители</value>
</data>
  <data name="ElseIfStatementAchievementName" xml:space="preserve">
    <value>Использование оператора else if</value>
</data>
  <data name="ElseIfStatementAchievementDescription" xml:space="preserve">
    <value>Найдите применение оператору else if</value>
</data>
  <data name="CreateSingleLineMethodAchievementName" xml:space="preserve">
    <value>Какой маленький</value>
</data>
  <data name="CreateSingleLineMethodAchievementDescription" xml:space="preserve">
    <value>Создайте метод, содержащий только одно единственное return-выражение</value>
</data>
  <data name="AnonymousObjectAchievementName" xml:space="preserve">
    <value>Анонимный объект</value>
</data>
  <data name="AnonymousObjectAchievementDescription" xml:space="preserve">
    <value>Создайте анонимный объект</value>
</data>
  <data name="TryCatchStatementAchievementName" xml:space="preserve">
    <value>Блок Try-Catch</value>
</data>
  <data name="TryCatchStatementAchievementDescription" xml:space="preserve">
    <value>Используйте блок try-catch</value>
</data>
  <data name="SwitchAchievementName" xml:space="preserve">
    <value>Мультиплексирование</value>
</data>
  <data name="SwitchAchievementDescription" xml:space="preserve">
    <value>Создайте оператор switch</value>
</data>
  <data name="CreateBaseConstructorInitAchievementName" xml:space="preserve">
    <value>Звонок на базу</value>
</data>
  <data name="CreateBaseConstructorInitAchievementDescription" xml:space="preserve">
    <value>Из конструктора вызовите конструктор базового класса с помощью ключевого слова base()</value>
</data>
  <data name="CastAchievementName" xml:space="preserve">
    <value>Мечи на орала</value>
</data>
  <data name="CastAchievementDescription" xml:space="preserve">
    <value>Явно приведите переменную</value>
</data>
  <data name="DeclareMultipleDimArrayAchievementName" xml:space="preserve">
    <value>Объявление многомерного массива</value>
</data>
  <data name="DeclareMultipleDimArrayAchievementDescription" xml:space="preserve">
    <value>Объявите многомерный массив</value>
</data>
  <data name="CurseAlotAchievementDescription" xml:space="preserve">
    <value>Объявите более пяти переменных, имена которых содержат 'нехорошие слова' (английские)</value>
  </data>
  <data name="CurseAlotAchievementName" xml:space="preserve">
    <value>Как некультурно!</value>
  </data>
  <data name="SpeechlessAchievementDescription" xml:space="preserve">
    <value>Объявите более пяти переменных, имена которых очень скучны и ничего не обозначают, например 'meh', 'bla', и т.д.</value>
  </data>
  <data name="SpeechlessAchievementName" xml:space="preserve">
    <value>Как оригинально...</value>
  </data>
  <data name="DangerousEqualityCheckAchievementName" xml:space="preserve">
    <value>Двойная проблема</value>
  </data>
  <data name="DangerousEqualityCheckAchievementDescription" xml:space="preserve">
    <value>Проверьте равенство двух чисел с плавающей точкой (хинт: это может не сработать)</value>
  </data>
  <data name="CreateDelegateAchievementDescription" xml:space="preserve">
    <value>Объявите делегат delegate</value>
  </data>
  <data name="CreateDelegateAchievementName" xml:space="preserve">
    <value>Нет ничего невозможного, если поручить это другому</value>
  </data>
  <data name="CreateEventAchievementDescription" xml:space="preserve">
    <value>Создайте событие</value>
  </data>
  <data name="CreateEventAchievementName" xml:space="preserve">
    <value>Событие года?!</value>
  </data>
  <data name="AbortThreadAchievementDescription" xml:space="preserve">
    <value>Прервите поток с помощью метода Abort()</value>
  </data>
  <data name="AbortThreadAchievementName" xml:space="preserve">
    <value>Отмена, отмена, отмена!</value>
  </data>
  <data name="CreateThreadAchievementDescription" xml:space="preserve">
    <value>Создайте поток</value>
  </data>
  <data name="CreateThreadAchievementName" xml:space="preserve">
    <value>Паук</value>
  </data>
  <data name="JoinThreadAchievementDescription" xml:space="preserve">
    <value>Заблокируйте текущий поток с помощью метода Join()</value>
  </data>
  <data name="JoinThreadAchievementName" xml:space="preserve">
    <value>Остановить этот поток!</value>
  </data>
  <data name="SleepThreadAchievementDescription" xml:space="preserve">
    <value>Приостановите поток на какое-то явно указанное время.</value>
  </data>
  <data name="SleepThreadAchievementName" xml:space="preserve">
    <value>Спокойной ночи.</value>
  </data>
  <data name="StartThreadAchievementDescription" xml:space="preserve">
    <value>Запустите поток</value>
  </data>
  <data name="StartThreadAchievementName" xml:space="preserve">
    <value>Внимание, поток... старт!</value>
  </data>
</root>
